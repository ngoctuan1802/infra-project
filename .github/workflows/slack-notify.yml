name: Slack Notification

on:
  workflow_call:
    inputs:
      status:
        required: true
        type: string
        description: 'Job status (success/failure/cancelled)'
      stage:
        required: true
        type: string
        description: 'Stage name (e.g., Terraform Plan)'
      environment:
        required: true
        type: string
        description: 'Environment (e.g., dev/staging/prod)'
      repository:
        required: true
        type: string
      actor:
        required: true
        type: string
      run_url:
        required: true
        type: string
      summary_file:
        required: false
        type: string
        default: ''
        description: 'Path to log file to include in notification'
      channel_id:
        required: true
        type: string
        description: 'Slack Channel ID to send message'
    secrets:
      SLACK_BOT_TOKEN:
        required: true
      SLACK_CHANNEL_ID:
        required: true


jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Download logs (if specified)
        if: inputs.summary_file != ''
        uses: actions/download-artifact@v4
        with:
          name: logs
          path: ./logs
        continue-on-error: true

      - name: Build Slack message payload
        id: build_payload
        shell: bash
        run: |
          STATUS="${{ inputs.status }}"

          # Emoji và màu theo trạng thái
          case "$STATUS" in
            success)
              ICON=":white_check_mark:"
              COLOR="#2eb886"
              TEXT_STATUS="Success"
              ;;
            failure)
              ICON=":x:"
              COLOR="#e01e5a"
              TEXT_STATUS="Failed"
              ;;
            cancelled)
              ICON=":warning:"
              COLOR="#daa038"
              TEXT_STATUS="Cancelled"
              ;;
            *)
              ICON=":grey_question:"
              COLOR="#808080"
              TEXT_STATUS="Unknown"
              ;;
          esac

          # Lấy 20 dòng cuối log
          if [ -n "${{ inputs.summary_file }}" ] && [ -f "${{ inputs.summary_file }}" ]; then
            SUMMARY_RAW=$(tail -n 20 "${{ inputs.summary_file }}" | head -c 2000)
          else
            SUMMARY_RAW="(No log summary available)"
          fi

          # Build payload JSON với fallback và text
          jq -n \
            --arg icon "$ICON" \
            --arg stage "${{ inputs.stage }}" \
            --arg env "${{ inputs.environment }}" \
            --arg text_status "$TEXT_STATUS" \
            --arg repo "${{ inputs.repository }}" \
            --arg actor "${{ inputs.actor }}" \
            --arg run_url "${{ inputs.run_url }}" \
            --arg summary "$SUMMARY_RAW" \
            --arg color "$COLOR" \
            '{
              text: "\($icon) \($stage) on \($env) — \($text_status)",
              attachments: [
                {
                  fallback: "\($stage) on \($env) — \($text_status)",
                  color: $color,
                  fields: [
                    {title: "Repository", value: $repo, short: true},
                    {title: "Triggered by", value: $actor, short: true},
                    {title: "Environment", value: $env, short: true},
                    {title: "Status", value: $text_status, short: true},
                    {title: "Workflow Run", value: "<\($run_url)|View Details>", short: false}
                  ]
                },
                {
                  color: "#36a64f",
                  title: "Last 20 lines of log:",
                  text: $summary,
                  mrkdwn_in: ["text"]
                }
              ]
            }' > slack_payload.json

          echo "✅ Slack payload generated:"
          cat slack_payload.json | jq .

      - name: Send Slack message
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ inputs.channel_id }}
          payload-file-path: slack_payload.json
          payload-file-path-parsed: true
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}