name: 01. Terraform Actions

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose Terraform action (apply or destroy)"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
      environment:
        description: "Select environment to deploy (dev or prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

jobs:
  terraform:
    name: Terraform ${{ github.event.inputs.action }} - ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/environments/${{ github.event.inputs.environment }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::491085416582:role/GitHubActions-Role
          aws-region: us-east-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply or Destroy
        run: |
          if [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve tfplan
          else
            terraform destroy -auto-approve
          fi

  slack-notify:
    name: Notify Slack
    needs: terraform
    if: always()
    uses: ./.github/workflows/slack-notify.yml
    with:
      status: ${{ needs.terraform.result }}
      stage: "AWS OIDC Test"
      environment: ${{ github.event.inputs.environment }}
      repository: ${{ github.repository }}
      actor: ${{ github.actor }}
      run_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      summary_file: aws-identity.log
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
